{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mviault\\\\Documents\\\\ecole\\\\efrei\\\\React\\\\firstProject\\\\mon-app\\\\src\\\\component\\\\CallApi.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GOOD_LETTER = \"AZERTYUIOPQSDFGHJKLMWXCVBNazertyuiopqsdfghjklmwxcvbnéàâêè\";\n\nfunction CallApi() {\n  _s();\n\n  const [word, setWord] = useState(undefined);\n  useEffect(() => {\n    (async () => {\n      const {\n        data\n      } = await getWord();\n      setWord(data);\n      console.log(data);\n    })();\n\n    return () => {};\n  }, []);\n\n  const handleKeyDown = event => {\n    if (GOOD_LETTER.includes(event.key)) {\n      console.log(\"A key was pressed\", event.key);\n      console.log(event.key);\n\n      if (actualWord.includes(event.key)) {\n        console.log(\"The word contained\", event.key);\n      } else console.log(\"The word doesn't contained\", event.key);\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", handleKeyDown, false);\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, []);\n\n  const getWord = async () => {\n    const dataJson = await fetch('https://animalfinderapi.herokuapp.com/word');\n    return await dataJson.json();\n  };\n\n  if (!word) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Waiting...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 16\n    }, this);\n  }\n\n  const actualWord = word.word;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: actualWord\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CallApi, \"vvkmVddrTio9tBtA6lRa9D2Sw38=\");\n\n_c = CallApi;\nexport default CallApi;\n\nvar _c;\n\n$RefreshReg$(_c, \"CallApi\");","map":{"version":3,"sources":["C:/Users/mviault/Documents/ecole/efrei/React/firstProject/mon-app/src/component/CallApi.js"],"names":["React","useEffect","useState","GOOD_LETTER","CallApi","word","setWord","undefined","data","getWord","console","log","handleKeyDown","event","includes","key","actualWord","window","addEventListener","removeEventListener","dataJson","fetch","json"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AAEA,MAAMC,WAAW,GAAG,2DAApB;;AACA,SAASC,OAAT,GAAmB;AAAA;;AACf,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAACK,SAAD,CAAhC;AACAN,EAAAA,SAAS,CAAC,MAAM;AACZ,KAAC,YAAY;AACT,YAAM;AAAEO,QAAAA;AAAF,UAAW,MAAMC,OAAO,EAA9B;AACAH,MAAAA,OAAO,CAACE,IAAD,CAAP;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACH,KAJD;;AAKA,WAAO,MAAM,CAAG,CAAhB;AACH,GAPQ,EAON,EAPM,CAAT;;AAUA,QAAMI,aAAa,GAAIC,KAAD,IAAW;AAC7B,QAAIV,WAAW,CAACW,QAAZ,CAAqBD,KAAK,CAACE,GAA3B,CAAJ,EAAqC;AACjCL,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCE,KAAK,CAACE,GAAvC;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAK,CAACE,GAAlB;;AACA,UAAIC,UAAU,CAACF,QAAX,CAAoBD,KAAK,CAACE,GAA1B,CAAJ,EAAoC;AAChCL,QAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCE,KAAK,CAACE,GAAxC;AACH,OAFD,MAGKL,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CE,KAAK,CAACE,GAAhD;AACR;AACJ,GATD;;AAWAd,EAAAA,SAAS,CAAC,MAAM;AACZgB,IAAAA,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAmCN,aAAnC,EAAkD,KAAlD;AACA,WAAO,MAAM;AACTK,MAAAA,MAAM,CAACE,mBAAP,CAA2B,SAA3B,EAAsCP,aAAtC;AACH,KAFD;AAGH,GALQ,EAKN,EALM,CAAT;;AAOA,QAAMH,OAAO,GAAG,YAAY;AACxB,UAAMW,QAAQ,GAAG,MAAMC,KAAK,CAAC,4CAAD,CAA5B;AACA,WAAO,MAAMD,QAAQ,CAACE,IAAT,EAAb;AACH,GAHD;;AAMA,MAAI,CAACjB,IAAL,EAAW;AACP,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,QAAMW,UAAU,GAAGX,IAAI,CAACA,IAAxB;AAEA,sBACI;AAAA,2BACI;AAAA,gBAAIW;AAAJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;GAhDQZ,O;;KAAAA,O;AAkDT,eAAeA,OAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\r\n\r\nconst GOOD_LETTER = \"AZERTYUIOPQSDFGHJKLMWXCVBNazertyuiopqsdfghjklmwxcvbnéàâêè\";\r\nfunction CallApi() {\r\n    const [word, setWord] = useState(undefined);\r\n    useEffect(() => {\r\n        (async () => {\r\n            const { data } = await getWord();\r\n            setWord(data);\r\n            console.log(data);\r\n        })();\r\n        return () => { };\r\n    }, []\r\n    );\r\n\r\n    const handleKeyDown = (event) => {\r\n        if (GOOD_LETTER.includes(event.key)) {\r\n            console.log(\"A key was pressed\", event.key);\r\n            console.log(event.key);\r\n            if (actualWord.includes(event.key)) {\r\n                console.log(\"The word contained\", event.key);\r\n            }\r\n            else console.log(\"The word doesn't contained\", event.key);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"keydown\", handleKeyDown, false);\r\n        return () => {\r\n            window.removeEventListener(\"keydown\", handleKeyDown);\r\n        };\r\n    }, []);\r\n\r\n    const getWord = async () => {\r\n        const dataJson = await fetch('https://animalfinderapi.herokuapp.com/word');\r\n        return await dataJson.json();\r\n    };\r\n\r\n\r\n    if (!word) {\r\n        return <p>Waiting...</p>\r\n    }\r\n\r\n    const actualWord = word.word;\r\n\r\n    return (\r\n        <div>\r\n            <p>{actualWord}</p>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default CallApi"]},"metadata":{},"sourceType":"module"}