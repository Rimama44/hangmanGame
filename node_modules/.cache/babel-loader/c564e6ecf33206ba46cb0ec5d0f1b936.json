{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mviault\\\\Documents\\\\ecole\\\\efrei\\\\React\\\\firstProject\\\\mon-app\\\\src\\\\component\\\\CallApi.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GOOD_LETTER = \"AZERTYUIOPQSDFGHJKLMWXCVBNazertyuiopqsdfghjklmwxcvbnéàâêè\";\n\nfunction CallApi() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [word, setWord] = useState(undefined);\n  const [correctLetters, setCorrectLetters] = useState([]);\n  useEffect(() => {\n    (async () => {\n      const {\n        data\n      } = await getWord();\n      setWord(data);\n      console.log(data);\n    })();\n\n    return () => {};\n  }, []);\n\n  const handleKeyDown = event => {\n    if (GOOD_LETTER.includes(event.key)) {\n      console.log(\"A key was pressed\", event.key);\n      setCorrectLetters(correctLetters + event.key);\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", handleKeyDown, false);\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, []);\n\n  const getWord = async () => {\n    const dataJson = await fetch('https://animalfinderapi.herokuapp.com/word');\n    return await dataJson.json();\n  };\n\n  const Guessing = _ref => {\n    _s();\n\n    let {\n      currentWord,\n      correctLetters\n    } = _ref;\n    const [letters, setLetters] = useState([]);\n    useEffect(() => {\n      [...currentWord].forEach(letter => {\n        if (correctLetters.includes(letter)) {\n          // eslint-disable-next-line no-shadow\n          setLetters(letters => [...letters, `${letter} `]);\n        } else {\n          // eslint-disable-next-line no-shadow\n          setLetters(letters => [...letters, \"_ \"]);\n        }\n      });\n      return () => {\n        setLetters([]);\n      };\n    }, [currentWord, correctLetters]);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: letters\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 16\n    }, this);\n  };\n\n  _s(Guessing, \"p0JHT5NY7kLqqVxDzt9dshKcry0=\");\n\n  if (!word) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Waiting...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Guessing, {\n      currentWord: word.word.split(\"\").fill(\"_\").join(\" \")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(CallApi, \"lRZdLnJD5WMlJVWxPaUY2ybyMlk=\");\n\n_c = CallApi;\nexport default CallApi;\n\nvar _c;\n\n$RefreshReg$(_c, \"CallApi\");","map":{"version":3,"sources":["C:/Users/mviault/Documents/ecole/efrei/React/firstProject/mon-app/src/component/CallApi.js"],"names":["React","useEffect","useState","GOOD_LETTER","CallApi","word","setWord","undefined","correctLetters","setCorrectLetters","data","getWord","console","log","handleKeyDown","event","includes","key","window","addEventListener","removeEventListener","dataJson","fetch","json","Guessing","currentWord","letters","setLetters","forEach","letter","split","fill","join"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\n\r\nconst GOOD_LETTER = \"AZERTYUIOPQSDFGHJKLMWXCVBNazertyuiopqsdfghjklmwxcvbnéàâêè\";\r\nfunction CallApi() {\r\n    const [word, setWord] = useState(undefined);\r\n    const [correctLetters, setCorrectLetters] = useState([]);\r\n    useEffect(() => {\r\n        (async () => {\r\n            const { data } = await getWord();\r\n            setWord(data);\r\n            console.log(data);\r\n        })();\r\n        return () => { };\r\n    }, []\r\n    );\r\n\r\n    const handleKeyDown = (event) => {\r\n        if (GOOD_LETTER.includes(event.key)) {\r\n            console.log(\"A key was pressed\", event.key);\r\n            setCorrectLetters(correctLetters + event.key);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"keydown\", handleKeyDown, false);\r\n        return () => {\r\n            window.removeEventListener(\"keydown\", handleKeyDown);\r\n        };\r\n    }, []);\r\n\r\n    const getWord = async () => {\r\n        const dataJson = await fetch('https://animalfinderapi.herokuapp.com/word');\r\n        return await dataJson.json();\r\n    };\r\n\r\n    const Guessing = ({ currentWord, correctLetters }) => {\r\n        const [letters, setLetters] = useState([]);\r\n      \r\n        useEffect(() => {\r\n          [...currentWord].forEach((letter) => {\r\n            if (correctLetters.includes(letter)) {\r\n              // eslint-disable-next-line no-shadow\r\n              setLetters((letters) => [...letters, `${letter} `]);\r\n            } else {\r\n              // eslint-disable-next-line no-shadow\r\n              setLetters((letters) => [...letters, \"_ \"]);\r\n            }\r\n          });\r\n          return () => {\r\n            setLetters([]);\r\n          };\r\n        }, [currentWord, correctLetters]);\r\n      \r\n        return <div>{letters}</div>;\r\n      };\r\n\r\n    if (!word) {\r\n        return <p>Waiting...</p>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Guessing currentWord={word.word.split(\"\").fill(\"_\").join(\" \")}/>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default CallApi"]},"metadata":{},"sourceType":"module"}